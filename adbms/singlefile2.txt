SQL

//Aggregate

create database staff1;
use staff1;
create table department(
dep_id varchar(30) primary key,
dep_name varchar(30));

create table staff(
staff_id varchar(30) primary key,
designation varchar(30),
qualification varchar(30),
type_of_appointment varchar(30),
dep_id varchar(30),
salary int,
foreign key (dep_id) references department(dep_id));

desc department;
desc staff;

 insert into department values
 ('100','MCA'),
 ('101','CSE'),
 ('102','BCA');
 
 insert into staff values
 ('001','Proff','Doct','Perm','100','100000'),
 ('002','Teacher','PG','Perm','101','75000'),
 ('003','Teaching Assistent','UG','Guest','102','50000'),
 ('004','Proff','Doct','Guest','100','75000'),
 ('005','Lab Staff','UG','Guest','101','50000'),
 ('006','Teacher','UG','Perm','102','150000');
 
 /* Find number of guest faculty in each dept*/
 select count(*),dep_name from staff,department where staff.dep_id=department.dep_id and type_of_appointment="Guest" group by dep_name;
 
 /*Find the department maximum number of staff having doctorate*/
 select dep_name from department,staff where staff.dep_id=department.dep_id AND qualification="Doct" group by dep_name order by count(dep_name) desc limit 1;
 
 /*Find the average salary of guest employee in eaxh department*/
 select avg(salary), dep_name from staff,department where staff.dep_id=department.dep_id AND type_of_appointment="Guest" group by dep_name;
 
 /*Find the number of faculties who have max salary*/
 select max(salary), dep_name from staff,department where staff.dep_id=department.dep_id group by dep_name;
 
 /*Find the total salary of MCA department*/
 select sum(salary) from staff,department where staff.dep_id =department.dep_id AND dep_name="MCA";
 
 
 select * from staff;
 select * from department;






Mongo
//vaccinated 

import pymongo
url="mongodb://localhost:27017/"
c=pymongo.MongoClient(url)
db=c["exam"]
coll=db["student"]
#Insert One data
"""
entry1={"_id":1,"Name":"Anjali","Place":"Kollam","Phone":8582639562,
"Vaccination_status":"Both vaccinated","RTPCR":"negative",
"Lab_mark":{"Internal":30,"External":45},
"Department":"MCA"}

coll.insert_one(entry1)

"""

#INsert many data
"""
entry2=[{"_id":2,"Name":"Anuradha","Place":"Varkala","Phone":99926639562,
"Vaccination_status":"Both vaccinated","RTPCR":"negative",
"Lab_mark":{"Internal":40,"External":48},
"Department":"Civil"},
{"_id":3,"Name":"Bismiya","Place":"Kollam","Phone":9446639562,
"Vaccination_status":"not vaccinated","RTPCR":"positive",
"Lab_mark":{"Internal":50,"External":39},
"Department":"MCA"},
{"_id":4,"Name":"Vimal","Place":"Ernakulam","Phone":8582639568,
"Vaccination_status":"First dose only","RTPCR":"positive",
"Lab_mark":{"Internal":40,"External":42},
"Department":"Civil"},
{"_id":5,"Name":"Vivek","Place":"Kollam","Phone":8582639777,
"Vaccination_status":"Both vaccinated","RTPCR":"negative",
"Lab_mark":{"Internal":50,"External":50},
"Department":"MCA"}]

coll.insert_many(entry2)

"""
#Nosql to sipaly name and Phone of not vaccinated students
"""
for x in coll.find({"Vaccination_status":"not vaccinated"},{"Name":1,"Phone":1}):
	print(x["Name"]+"\t"+str(x["Phone"]))
"""
#Display name and phone number of top 2 students in MCA dept(based on external marks)
"""
for x in coll.find({"Department":"MCA"},{"Name":1,"Phone":1,"Lab_mark.External":1}).sort("Lab_mark.External",-1).limit(2):
	print(x["Name"]+"\t"+str(x["Phone"])+"\t"+str(x["Lab_mark"]["External"]))
"""
#Display id,name and dept of students whose name starts with 'A'
"""
for x in coll.find({"Name":{"$regex":"^[aA]"}},{"_id":1,"Name":1,"Department":1}):
	print(str(x["_id"])+" "+x["Name"]+" "+x["Department"])
"""

#Update vaccination status as 'both vaccinated' of student whose id=4

myq={"_id":4}
upd={"$set":{"Vaccination_status":"both Vaccinated"}}
coll.update_one(myq,upd)


#name of 

for x in coll.find().sort("Lab_mark.External",-1): 
	print(x["Name"])



//class marks,json

import pymongo

url="mongodb://localhost:27017/"
c=pymongo.MongoClient(url)
db=c["student"]
coll=db["mark"]


#print first and last name and mark of all female students in mca dept


#for x in coll.find({"gender":"female","course":"MCA"},{"name":1,"_id":0,"mark":1}):
#	print(x["name"]["fname"]+" "+ x["name"]["lname"]+ " " + str(x["mark"]))


#display the details of student who scored highest marks in mca


#for x in coll.find({"course":"MCA"},{"name":1,"_id":0}).sort("mark",-1,).limit(1):
#	print (x)


#display all male student who secured A+ grade


#for x in coll.find({"gender":"male","grade":"A+"},{"name":1,"_id":0}):
#	print (x)


#display the name of top 3 students in mech dept

#for x in coll.find({"course":"Mechanical"},{"name":1,"_id":0}).sort("mark",-1,).limit(3):
#	print (x["name"]["fname"])


#display the details of female students (fname,lname,mark,contact)who achieved ,mark>90

#for x in coll.find({"gender":"female","mark":{"$gt":90}},{"name":1,"mark":1,"phone":1,"_id":0}):
#	print(x["name"]["fname"]+" "+ x["name"]["lname"]+ " " +str(x["phone"]["no"])+ " " +str(x["mark"]))


#display the details of students who secured mark >80 and <90

#for x in coll.find({"mark":{"$gt":80,"$lt":90}}):
#	print(x["name"]["fname"]+" "+ x["name"]["lname"]+ " " +str(x["phone"]["no"])+ " " +str(x["mark"]))



#display the details of students who names start with V
#for x in coll.find({"name.fname":{"$regex":"^A"}}):
#	print(x)


#display all students from Kollam

#for x in coll.find({"address.city":"Kollam"}):
#	print (x)


#display all students details who belong neither to tvm nor kollam

#for x in coll.find({"address.city":{"$nin":["Kollam","Thiruvananthapuram"]}}):
#	print (x)


#display all female students details who belong to either tvm or kollam

#for x in coll.find({"gender":"female","address.city":{"$in":["Kollam","Thiruvananthapuram"]}}):
#	print (x)



//delete 

import pymongo

url="mongodb://localhost:27017"
c=pymongo.MongoClient(url)
db=c['sample']
coll=db['student']

coll.delete_one({"mark":90})





//update

import pymongo

url="mongodb://localhost:27017"
c=pymongo.MongoClient(url)
db=c['sample']
coll=db['student']


myquery=({"mark":80})
_update=({"$set":{"mark":90}})

coll.update_many(myquery,_update)







